{"_lang":"csharp","_tocPath":"tutorial/toc.html","_navPath":"toc.html","_rel":"../","_path":"tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.html","_navRel":"../toc.html","_tocRel":"toc.html","_navKey":"~/../toc.yml","_tocKey":"~/../tutorial/toc.yml","conceptual":"\n<p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"4\" sourceendlinenumber=\"4\">In this topic we will create a plug-in to convert some simple <a href=\"https://en.wikipedia.org/wiki/Rich_Text_Format\" data-raw-source=\"[rich text format](https://en.wikipedia.org/wiki/Rich_Text_Format)\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"4\" sourceendlinenumber=\"4\">rich text format</a> files to html documents.</p>\n<h2 id=\"goal-and-limitation\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"6\" sourceendlinenumber=\"7\">Goal and limitation</h2>\n<ol sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"8\" sourceendlinenumber=\"14\">\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"8\" sourceendlinenumber=\"10\">In scope:<ol sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"9\" sourceendlinenumber=\"10\">\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"9\" sourceendlinenumber=\"9\">Our input will be a set of rtf files with <code>.rtf</code> as the file extension name.</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"10\" sourceendlinenumber=\"10\">The rtf files will be built as html document.</li>\n</ol>\n</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"11\" sourceendlinenumber=\"14\">Out of scope:<ol sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"12\" sourceendlinenumber=\"14\">\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"12\" sourceendlinenumber=\"12\">Picture or other object in rtf files.</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"13\" sourceendlinenumber=\"13\">Hyperlink in rtf files. (in the <a href=\"~/../tutorial/advanced_support_hyperlink.md\" data-raw-source=\"[advanced tutorial](advanced_support_hyperlink.md)\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"13\" sourceendlinenumber=\"13\">advanced tutorial</a>, we will describe how to support hyperlinks in a custom plugin.)</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"14\" sourceendlinenumber=\"14\">Metadata and title.</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"preparation\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"16\" sourceendlinenumber=\"17\">Preparation</h2>\n<ol sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"18\" sourceendlinenumber=\"34\">\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"18\" sourceendlinenumber=\"18\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"18\" sourceendlinenumber=\"18\">Create a new C# class library project in <code>Visual Studio</code>.</p>\n</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"20\" sourceendlinenumber=\"22\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"20\" sourceendlinenumber=\"20\">Add nuget packages:  </p>\n<ul sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"21\" sourceendlinenumber=\"22\">\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"21\" sourceendlinenumber=\"21\"><code>System.Collections.Immutable</code> with version 1.1.37</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"22\" sourceendlinenumber=\"22\"><code>Microsoft.Composition</code> with version 1.0.27</li>\n</ul>\n</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"24\" sourceendlinenumber=\"26\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"24\" sourceendlinenumber=\"26\">Add <code>Microsoft.DocAsCode.Plugins</code><br>If building DocFX from source code then add a reference to the project,\notherwise add the nuget package <code>Microsoft.DocAsCode.Plugins</code> with the same version as DocFX.</p>\n</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"28\" sourceendlinenumber=\"29\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"28\" sourceendlinenumber=\"29\">Add framework assembly references:\n<code>PresentationCore</code>, <code>PresentationFramework</code>, <code>WindowsBase</code></p>\n</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"31\" sourceendlinenumber=\"32\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"31\" sourceendlinenumber=\"32\">Add a project for converting rtf to html:<br>Clone project <a href=\"https://github.com/mmanela/MarkupConverter\" data-raw-source=\"[MarkupConverter](https://github.com/mmanela/MarkupConverter)\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"32\" sourceendlinenumber=\"32\">MarkupConverter</a>, and reference it.</p>\n</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\">Copy the code file StaTaskScheduler.cs from <a href=\"https://code.msdn.microsoft.com/ParExtSamples\" data-raw-source=\"[ParExtSamples](https://code.msdn.microsoft.com/ParExtSamples)\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\">ParExtSamples</a></p>\n</li>\n</ol>\n<h2 id=\"create-a-document-processor\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"36\" sourceendlinenumber=\"37\">Create a document processor</h2>\n<h3 id=\"responsibility-of-the-document-processor\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"39\">Responsibility of the document processor</h3>\n<ul sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"41\" sourceendlinenumber=\"45\">\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"41\" sourceendlinenumber=\"41\">Declare which file can be handled.</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"42\" sourceendlinenumber=\"42\">Load from the file to the object model.</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"43\" sourceendlinenumber=\"43\">Provide build steps.</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"44\" sourceendlinenumber=\"44\">Report document type, file links and xref links in document.</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"45\" sourceendlinenumber=\"45\">Update references.</li>\n</ul>\n<h3 id=\"create-our-rtfdocumentprocessor\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"47\" sourceendlinenumber=\"47\">Create our RtfDocumentProcessor</h3>\n<ol sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"49\" sourceendlinenumber=\"82\">\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"49\" sourceendlinenumber=\"56\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"49\" sourceendlinenumber=\"49\">Create a new class (RtfDocumentProcessor.cs) with the following code:</p>\n<pre sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"50\" sourceendlinenumber=\"56\"><code class=\"lang-csharp\">[Export(typeof(IDocumentProcessor))]\npublic class RtfDocumentProcessor : IDocumentProcessor\n{\n    // todo : implements IDocumentProcessor.\n}\n</code></pre></li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"58\" sourceendlinenumber=\"64\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"58\" sourceendlinenumber=\"58\">Declare that we can handle the <code>.rtf</code> file:</p>\n<pre><code class=\"lang-csharp\" name=\"GetProcessingPriority\">public ProcessingPriority GetProcessingPriority(FileAndType file)\n{\n    if (file.Type == DocumentType.Article &amp;&amp;\n        &quot;.rtf&quot;.Equals(Path.GetExtension(file.File), StringComparison.OrdinalIgnoreCase))\n    {\n        return ProcessingPriority.Normal;\n    }\n    return ProcessingPriority.NotSupported;\n}\n</code></pre><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"62\" sourceendlinenumber=\"64\">Here we declare this processor can handle any <code>.rtf</code> file in the article category with normal priority.\nWhen two or more processors compete for the same file, DocFX will give it to the higher priority one.\n<em>Unexpected</em>: two or more processor declare for the same file with same priority.</p>\n</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"66\" sourceendlinenumber=\"69\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"66\" sourceendlinenumber=\"66\">Load our rtf file by reading all text:</p>\n<pre><code class=\"lang-csharp\" name=\"Load\">public FileModel Load(FileAndType file, ImmutableDictionary&lt;string, object&gt; metadata)\n{\n    var content = new Dictionary&lt;string, object&gt;\n    {\n        [&quot;conceptual&quot;] = File.ReadAllText(Path.Combine(file.BaseDir, file.File)),\n        [&quot;type&quot;] = &quot;Conceptual&quot;,\n        [&quot;path&quot;] = file.File,\n    };\n    return new FileModel(file, content);\n}\n</code></pre><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"69\" sourceendlinenumber=\"69\">We use <code>Dictionary&lt;string, object&gt;</code> as the data model, similar to how <a href=\"https://github.com/dotnet/docfx/blob/dev/src/Microsoft.DocAsCode.EntityModel/Plugins/ConceptualDocumentProcessor.cs\" data-raw-source=\"[ConceptualDocumentProcessor](https://github.com/dotnet/docfx/blob/dev/src/Microsoft.DocAsCode.EntityModel/Plugins/ConceptualDocumentProcessor.cs)\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"69\" sourceendlinenumber=\"69\">ConceptualDocumentProcessor</a> stores the content of markdown files.</p>\n</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"71\" sourceendlinenumber=\"72\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"71\" sourceendlinenumber=\"71\">Implement <code>Save</code> method as follows:</p>\n<pre><code class=\"lang-csharp\" name=\"Save\">public SaveResult Save(FileModel model)\n{\n    return new SaveResult\n    {\n        DocumentType = &quot;Conceptual&quot;,\n        ModelFile = model.File,\n        LinkToFiles = linkToFiles.ToImmutableArray(),\n    };\n}\n</code></pre></li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"74\" sourceendlinenumber=\"75\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"74\" sourceendlinenumber=\"74\"><code>BuildSteps</code> property can provide several build steps for the model. We suggest implementing this in the following manner:</p>\n<pre><code class=\"lang-csharp\" name=\"BuildSteps\">[ImportMany(nameof(RtfDocumentProcessor))]\npublic IEnumerable&lt;IDocumentBuildStep&gt; BuildSteps { get; set; }\n</code></pre></li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"77\" sourceendlinenumber=\"79\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"77\" sourceendlinenumber=\"78\"><code>Name</code> property is used to display in the log, so give any constant string you like.<br>e.g.:  </p>\n<pre><code class=\"lang-csharp\" name=\"Name\">public string Name =&gt; nameof(RtfDocumentProcessor);\n</code></pre></li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"81\" sourceendlinenumber=\"82\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"81\" sourceendlinenumber=\"81\">Since we don&#39;t support hyperlink, keep the <code>UpdateHref</code> method empty.</p>\n<pre><code class=\"lang-csharp\" name=\"UpdateHref\">public void UpdateHref(FileModel model, IDocumentBuildContext context)\n{\n}\n</code></pre></li>\n</ol>\n<p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"84\" sourceendlinenumber=\"84\">View the final <a href=\"../codesnippet/Rtf/RtfDocumentProcessor.cs\" data-raw-source=\"[RtfDocumentProcessor.cs](../codesnippet/Rtf/RtfDocumentProcessor.cs)\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"84\" sourceendlinenumber=\"84\">RtfDocumentProcessor.cs</a></p>\n<h2 id=\"create-a-document-build-step\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"87\" sourceendlinenumber=\"88\">Create a document build step</h2>\n<h3 id=\"responsibility-of-the-build-step\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"90\" sourceendlinenumber=\"90\">Responsibility of the build step</h3>\n<ul sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"92\" sourceendlinenumber=\"113\">\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"92\" sourceendlinenumber=\"92\">Reconstruct documents via the <code>Prebuild</code> method, e.g.: remove some document according to a certain rule.</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"93\" sourceendlinenumber=\"93\">Transform document content via <code>Build</code> method, e.g.: transform rtf content to html content.</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"94\" sourceendlinenumber=\"94\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"94\" sourceendlinenumber=\"94\">Transform more content required by all document processed via the <code>PostBuild</code> method, e.g.: extract the link text from the title of another document.</p>\n</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"96\" sourceendlinenumber=\"113\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"96\" sourceendlinenumber=\"96\">About build order:</p>\n<ol sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"97\" sourceendlinenumber=\"100\">\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"97\" sourceendlinenumber=\"97\">For all documents in one processor always <code>Prebuild</code> -&gt; <code>Build</code> -&gt; <code>Postbuild</code>.</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"98\" sourceendlinenumber=\"98\">For all documents in one processor always invoke <code>Prebuild</code> by <code>BuildOrder</code>.</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"99\" sourceendlinenumber=\"99\">For each document in one processor always invoke <code>Build</code> by <code>BuildOrder</code>.</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"100\" sourceendlinenumber=\"100\">For all documents in one processor always invoke <code>Postbuild</code> by <code>BuildOrder</code>.</li>\n</ol>\n<p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"102\" sourceendlinenumber=\"102\">e.g.: Document processor <em>X</em> has two steps: A (with BuildOrder=1), B (with BuildOrder=2). When <em>X</em> is handling documents [D1, D2, D3], the invoke order is as follows:</p>\n<pre sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"103\" sourceendlinenumber=\"113\"><code>A.Prebuild([D1, D2, D3]) returns [D1, D2, D3]\nB.Prebuild([D1, D2, D3]) returns [D1, D2, D3]\nParallel(\n  A.Build(D1) -&gt; B.Build(D1),\n  A.Build(D2) -&gt; B.Build(D2),\n  A.Build(D3) -&gt; B.Build(D3)\n)\nA.Postbuild([D1, D2, D3])\nB.Postbuild([D1, D2, D3])\n</code></pre></li>\n</ul>\n<h3 id=\"create-our-rtfbuildstep\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"115\" sourceendlinenumber=\"115\">Create our RtfBuildStep:</h3>\n<ol sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"117\" sourceendlinenumber=\"130\">\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"117\" sourceendlinenumber=\"124\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"117\" sourceendlinenumber=\"117\">Create a new class (RtfBuildStep.cs), and declare it is a build step for <code>RtfDocumentProcessor</code>:</p>\n<pre sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"118\" sourceendlinenumber=\"124\"><code class=\"lang-csharp\">[Export(nameof(RtfDocumentProcessor), typeof(IDocumentBuildStep))]\npublic class RtfBuildStep : IDocumentBuildStep\n{\n    // todo : implements IDocumentBuildStep.\n}\n</code></pre></li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"126\" sourceendlinenumber=\"127\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"126\" sourceendlinenumber=\"126\">In the <code>Build</code> method, convert rtf to html:</p>\n<pre><code class=\"lang-csharp\" name=\"Build\">private readonly TaskFactory _taskFactory = new TaskFactory(new StaTaskScheduler(1));\n\npublic void Build(FileModel model, IHostService host)\n{\n    string content = (string)((Dictionary&lt;string, object&gt;)model.Content)[&quot;conceptual&quot;];\n    content = _taskFactory.StartNew(() =&gt; RtfToHtmlConverter.ConvertRtfToHtml(content)).Result;\n    ((Dictionary&lt;string, object&gt;)model.Content)[&quot;conceptual&quot;] = content;\n}\n</code></pre></li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"129\" sourceendlinenumber=\"130\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"129\" sourceendlinenumber=\"129\">Implement other methods:</p>\n<pre><code class=\"lang-csharp\" name=\"Others\">public int BuildOrder =&gt; 0;\n\npublic string Name =&gt; nameof(RtfBuildStep);\n\npublic void Postbuild(ImmutableList&lt;FileModel&gt; models, IHostService host)\n{\n}\n\npublic IEnumerable&lt;FileModel&gt; Prebuild(ImmutableList&lt;FileModel&gt; models, IHostService host)\n{\n    return models;\n}\n</code></pre></li>\n</ol>\n<p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"132\" sourceendlinenumber=\"132\">View the final <a href=\"../codesnippet/Rtf/RtfBuildStep.cs\" data-raw-source=\"[RtfBuildStep.cs](../codesnippet/Rtf/RtfBuildStep.cs)\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"132\" sourceendlinenumber=\"132\">RtfBuildStep.cs</a></p>\n<h2 id=\"enable-plug-in\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"135\" sourceendlinenumber=\"136\">Enable plug-in</h2>\n<ol sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"137\" sourceendlinenumber=\"142\">\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"137\" sourceendlinenumber=\"137\">Build our project.</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"138\" sourceendlinenumber=\"142\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"138\" sourceendlinenumber=\"138\">Copy the output dll files to:</p>\n<ul sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"139\" sourceendlinenumber=\"142\">\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"139\" sourceendlinenumber=\"139\">Global: the folder with name <code>Plugins</code> under DocFX.exe</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"140\" sourceendlinenumber=\"142\"><p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"140\" sourceendlinenumber=\"140\">Non-global: the folder with name <code>Plugins</code> under a template folder. Then run <code>DocFX build</code> command with parameter <code>-t {template}</code>.</p>\n<p sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"142\" sourceendlinenumber=\"142\"><em>Hint</em>: DocFX can merge templates so create a template that only contains the <code>Plugins</code> folder, then run the command <code>DocFX build</code> with parameter <code>-t {templateForRender},{templateForPlugins}</code>. </p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"build-document\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"144\" sourceendlinenumber=\"145\">Build document</h2>\n<ol sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"146\" sourceendlinenumber=\"147\">\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"146\" sourceendlinenumber=\"146\">Run command <code>DocFX init</code> and set the source article with <code>**.rtf</code>.</li>\n<li sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"147\" sourceendlinenumber=\"147\">Run command <code>DocFX build</code>.</li>\n</ol>\n","type":"Conceptual","source":{"remote":{"path":"Documentation/tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md","branch":"doc","repo":"https://github.com/dotnet/docfx.git"},"startLine":0.0,"endLine":0.0,"isExternal":false},"path":"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md","documentation":{"remote":{"path":"Documentation/tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md","branch":"doc","repo":"https://github.com/dotnet/docfx.git"},"startLine":0.0,"endLine":0.0,"isExternal":false},"_docfxVersion":"2.15.0.424","_systemKeys":["conceptual","type","source","path","documentation","title","rawTitle","wordCount"],"title":"How-to: Build your own type of documentation with a custom plug-in","rawTitle":"<h1 id=\"how-to-build-your-own-type-of-documentation-with-a-custom-plug-in\" sourcefile=\"../tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">How-to: Build your own type of documentation with a custom plug-in</h1>","wordCount":793.0,"__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","_shared":{}},"_disableToc":false,"docurl":"https://github.com/dotnet/docfx/blob/doc/Documentation/tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.md/#L1"}