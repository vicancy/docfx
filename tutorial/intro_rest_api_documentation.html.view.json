{"_lang":"csharp","_tocPath":"tutorial/toc.html","_navPath":"toc.html","_rel":"../","_path":"tutorial/intro_rest_api_documentation.html","_navRel":"../toc.html","_tocRel":"toc.html","_navKey":"~/../toc.yml","_tocKey":"~/../tutorial/toc.yml","conceptual":"\n<h2 id=\"introduction\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"4\" sourceendlinenumber=\"5\">Introduction</h2>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"7\" sourceendlinenumber=\"7\">DocFX now supports generating documentation from REST APIs following <a href=\"http://swagger.io/specification/\" data-raw-source=\"[Swagger specification](http://swagger.io/specification/)\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"7\" sourceendlinenumber=\"7\">Swagger specification</a> version 2.0.</p>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"9\" sourceendlinenumber=\"9\">The Swagger RESTful API files <em>MUST</em> end with <code>.json</code>.</p>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"11\" sourceendlinenumber=\"11\">One Swagger API file generates one HTML file. For example. a file <code>contacts.swagger.json</code> generates file naming <code>contacts.html</code>.</p>\n<h2 id=\"basic-structure\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"13\" sourceendlinenumber=\"14\">Basic structure</h2>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">A single Swagger API file is considered as a unique REST <strong>File</strong> containing multiple <strong>API</strong>s. The <strong>UID</strong>(Unique IDentifier) for the <strong>File</strong> is defined as the combination of <code>host</code>, <code>basePath</code>, <code>info.title</code> and <code>info.version</code> with <code>/</code> as separator. For example, the following Swagger API file has <strong>UID</strong> equals to <code>microsoft.com/docfx/Contacts/1.6</code>:</p>\n<pre sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"17\" sourceendlinenumber=\"30\"><code class=\"lang-json\">{\n  &quot;swagger&quot;: &quot;2.0&quot;,\n  &quot;info&quot;: {\n    &quot;title&quot;: &quot;Contacts&quot;,\n    &quot;version&quot;: &quot;1.6&quot;\n  },\n  &quot;host&quot;: &quot;microsoft.com&quot;,\n  &quot;basePath&quot;: &quot;/docfx&quot;,\n  &quot;schemes&quot;: [\n    &quot;https&quot;\n  ]\n}\n</code></pre><p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"32\" sourceendlinenumber=\"32\">A REST API <strong>File</strong> contains multiple <strong>API</strong>s as its children. An <strong>API</strong> is an <a href=\"http://swagger.io/specification/#operationObject\" data-raw-source=\"[Operation Object](http://swagger.io/specification/#operationObject)\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"32\" sourceendlinenumber=\"32\">Operation Object</a> defined in <a href=\"http://swagger.io/specification/#pathItemObject\" data-raw-source=\"[Path Item Object](http://swagger.io/specification/#pathItemObject)\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"32\" sourceendlinenumber=\"32\">Path Item Object</a>. The <strong>UID</strong>(Unique IDentifier) for this <strong>API</strong> is defined as the combination of the <strong>UID</strong> of the <strong>File</strong> and the <code>operationId</code> of the <a href=\"http://swagger.io/specification/#operationObject\" data-raw-source=\"[Operation Object](http://swagger.io/specification/#operationObject)\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"32\" sourceendlinenumber=\"32\">Operation Object</a>. For example, the following <code>get_contacts</code> operation has <strong>UID</strong> equal to <code>microsoft.com/docfx/Contacts/1.6/get_contacts</code>:</p>\n<pre sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"33\" sourceendlinenumber=\"57\"><code class=\"lang-json\">{\n  &quot;swagger&quot;: &quot;2.0&quot;,\n  &quot;info&quot;: {\n    &quot;title&quot;: &quot;Contacts&quot;,\n    &quot;version&quot;: &quot;1.6&quot;\n  },\n  &quot;host&quot;: &quot;microsoft.com&quot;,\n  &quot;basePath&quot;: &quot;/docfx&quot;,\n  &quot;schemes&quot;: [\n    &quot;https&quot;\n  ],\n  &quot;paths&quot;: {\n    &quot;/contacts&quot;: {\n      &quot;get&quot;: {\n        &quot;parameters&quot;: [\n        ],\n        &quot;responses&quot;: {\n        },\n        &quot;operationId&quot;: &quot;get_contacts&quot;\n      }\n    }\n  }\n}\n</code></pre><div class=\"TIP\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"59\" sourceendlinenumber=\"59\"><h5>Tip</h5><p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"60\" sourceendlinenumber=\"61\">It is recommended that user provides a well-formed <code>operationId</code> name.\nWe suggest that the <code>operationId</code> is one word in camelCase or snake_case.</p>\n</div>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"63\" sourceendlinenumber=\"63\">A REST API <strong>File</strong> could also contain multiple tags. The tag is a <a href=\"http://swagger.io/specification/#tagObject\" data-raw-source=\"[Tag Object](http://swagger.io/specification/#tagObject)\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"63\" sourceendlinenumber=\"63\">Tag Object</a>, which is optional and used by <a href=\"http://swagger.io/specification/#operationObject\" data-raw-source=\"[Operation Object](http://swagger.io/specification/#operationObject)\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"63\" sourceendlinenumber=\"63\">Operation Object</a>. The <strong>UID</strong>(Unique IDentifier) for this tag is defined as the combination of <strong>UID</strong> of the <strong>File</strong>, <code>tag</code>, and <code>name</code> of the <a href=\"http://swagger.io/specification/#tagObject\" data-raw-source=\"[Tag Object](http://swagger.io/specification/#tagObject)\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"63\" sourceendlinenumber=\"63\">Tag Object</a>. For example, the following tag <code>Basic</code> has <strong>UID</strong> <code>microsoft.com/docfx/Contacts/1.6/tag/Basic</code>:</p>\n<pre sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"64\" sourceendlinenumber=\"87\"><code class=\"lang-json\">{\n  &quot;swagger&quot;: &quot;2.0&quot;,\n  &quot;info&quot;: {\n    &quot;title&quot;: &quot;Contacts&quot;,\n    &quot;version&quot;: &quot;1.6&quot;\n  },\n  &quot;host&quot;: &quot;microsoft.com&quot;,\n  &quot;basePath&quot;: &quot;/docfx&quot;,\n  &quot;schemes&quot;: [\n    &quot;https&quot;\n  ],\n  &quot;tags&quot;: [\n    {\n      &quot;name&quot;: &quot;Basic&quot;,\n      &quot;description&quot;: &quot;Basic description&quot;\n    },\n    {\n      &quot;name&quot;: &quot;Advanced&quot;,\n      &quot;description&quot;: &quot;Advanced description&quot;\n    }\n  ]\n}\n</code></pre><h2 id=\"html-layout\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"89\" sourceendlinenumber=\"90\">HTML layout</h2>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"91\" sourceendlinenumber=\"91\">The generated HTML file lists all the <strong>API</strong>s inside the <strong>File</strong> in the order defined in the Swagger REST file.</p>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"93\" sourceendlinenumber=\"93\">You can use <em>Overwrite File</em>s to add more information to the <strong>File</strong> and <strong>API</strong>, and use tags to organize the sections of the <strong>API</strong>s.</p>\n<h3 id=\"overwrite-files\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"95\" sourceendlinenumber=\"95\"><em>Overwrite File</em>s</h3>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"96\" sourceendlinenumber=\"96\"><em>Overwrite File</em>s are Markdown files with multiple <em>Overwrite Section</em>s starting with YAML header block. A valid YAML header for an <em>Overwrite Section</em> <em>MUST</em> take the form of valid <a href=\"http://www.yaml.org/spec/1.2/spec.html\" data-raw-source=\"[YAML](http://www.yaml.org/spec/1.2/spec.html)\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"96\" sourceendlinenumber=\"96\">YAML</a> set between triple-dashed lines and start with property <code>uid</code>. Here is a basic example of an <em>Overwrite Section</em>:</p>\n<pre sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"98\" sourceendlinenumber=\"103\"><code class=\"lang-md\">---\nuid: microsoft.com/docfx/Contacts/1.6\n---\nFurther description for `microsoft.com/docfx/Contacts/1.6`\n</code></pre><p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"105\" sourceendlinenumber=\"105\">The <code>uid</code> value <em>MUST</em> match the <code>uid</code> of the <strong>File</strong> or <strong>API</strong> that you want to overwrite. The content following YAML header is the additional Markdown description for the <strong>File</strong> or <strong>API</strong>. By default, it is transformed to HTML and appended below the description of the <strong>File</strong> or <strong>API</strong>.</p>\n<h3 id=\"add-footer\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"107\" sourceendlinenumber=\"107\">Add footer</h3>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"108\" sourceendlinenumber=\"108\">You can also define the <code>footer</code> of an <strong>File</strong> or <strong>API</strong> using the following syntax:</p>\n<pre sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"110\" sourceendlinenumber=\"116\"><code class=\"lang-md\">---\nuid: microsoft.com/docfx/Contacts/1.6\nfooter: *content\n---\nFooter for `microsoft.com/docfx/Contacts/1.6`\n</code></pre><p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"118\" sourceendlinenumber=\"118\"><code>*content</code> is the keyword representing the Markdown content following YAML header. The value for <code>*content</code> is always transformed from Markdown content to HTML. In the above example, the value for <code>*content</code> is <code>&lt;p&gt;Footer for &lt;code&gt;microsoft.com/docfx/Contacts/1.6&lt;/code&gt;&lt;/p&gt;</code>. In this way, the value of <code>footer</code> for <strong>API</strong> <code>microsoft.com/docfx/Contacts/1.6</code> is set to <code>&lt;p&gt;Footer for &lt;code&gt;microsoft.com/docfx/Contacts/1.6&lt;/code&gt;&lt;/p&gt;</code>. We leverage <a href=\"http://www.yaml.org/spec/1.2/spec.html#id2765878\" data-raw-source=\"[Anchors](http://www.yaml.org/spec/1.2/spec.html#id2765878)\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"118\" sourceendlinenumber=\"118\">Anchors</a> syntax in YAML specification for <code>*content</code>.</p>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"120\" sourceendlinenumber=\"120\">If <code>footer</code> is set, the content from <code>footer</code> will be appended to the last section of the <strong>File</strong> or <strong>API</strong>. It is usually used to define <strong>See Also</strong> or <strong>Additional Resources</strong> for the documentation.</p>\n<h3 id=\"tags-to-organize-the-sections-of-apis\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"122\" sourceendlinenumber=\"122\">Tags to organize the sections of APIs</h3>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"123\" sourceendlinenumber=\"123\">You can organize the sections of APIs by using tags in Swagger file, following definitions in <a href=\"http://swagger.io/specification/#tagObject\" data-raw-source=\"[Tag Object](http://swagger.io/specification/#tagObject)\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"123\" sourceendlinenumber=\"123\">Tag Object</a>. </p>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"125\" sourceendlinenumber=\"125\">Each API can be specified with one or multiple tags, or not speficied with any tag.</p>\n<ul sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"126\" sourceendlinenumber=\"129\">\n<li sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"126\" sourceendlinenumber=\"126\">If all APIs are <em>not</em> tagged, each API will not be included in any sections.</li>\n<li sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"127\" sourceendlinenumber=\"127\">If the API is specified with <em>one</em> tag only, it will show inside this one tag section.</li>\n<li sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"128\" sourceendlinenumber=\"128\">If the API is specified with <em>multiple</em> tags, it will show inside multiple tag sections.</li>\n<li sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"129\" sourceendlinenumber=\"129\">If some APIs are specified with tags while some other APIs are not, the untagged APIs will be organized into one auto generated <code>Other apis</code> section.</li>\n</ul>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"131\" sourceendlinenumber=\"131\">Specific bookmark could be added to tag section using <code>x-bookmark-id</code>, which is Swagger schema extensions following <a href=\"http://swagger.io/specification/#vendorExtensions\" data-raw-source=\"[Specification Extensions](http://swagger.io/specification/#vendorExtensions)\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"131\" sourceendlinenumber=\"131\">Specification Extensions</a>. If no <code>x-bookmark-id</code> is specified, <code>name</code> of the tag will be the default bookmark.</p>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"133\" sourceendlinenumber=\"133\">For example, the following swagger file defines <code>Basic</code> and <code>Advanced</code> tags.</p>\n<ol sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"134\" sourceendlinenumber=\"140\">\n<li sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"134\" sourceendlinenumber=\"137\">Sections in the layout:<ul sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"135\" sourceendlinenumber=\"137\">\n<li sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"135\" sourceendlinenumber=\"135\"><code>set_contacts</code> API is tagged with <code>Advanced</code> only, then it will only show inside <code>Advanced</code> tag section.</li>\n<li sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"136\" sourceendlinenumber=\"136\"><code>get_contacts</code> API is tagged with both <code>Basic</code> and <code>Advanced</code>, then it will show inside both of the tag sections.</li>\n<li sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"137\" sourceendlinenumber=\"137\"><code>delete_contacts</code> API is not tagged, it will show inside &quot;Other apis&quot; section.</li>\n</ul>\n</li>\n<li sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"138\" sourceendlinenumber=\"140\">Bookmarks:<ul sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"139\" sourceendlinenumber=\"140\">\n<li sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"139\" sourceendlinenumber=\"139\">Bookmark of <code>Basic</code> tag is <code>BasicBookmark</code>, which is defined by <code>x-bookmark-id</code>.</li>\n<li sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"140\" sourceendlinenumber=\"140\">Bookmark of <code>Advanced</code> tag is <code>Advanced</code>, which use <code>name</code> by default.</li>\n</ul>\n</li>\n</ol>\n<pre sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"142\" sourceendlinenumber=\"186\"><code class=\"lang-json\">{\n  &quot;swagger&quot;: &quot;2.0&quot;,\n  &quot;info&quot;: {\n    &quot;title&quot;: &quot;Contacts&quot;,\n    &quot;version&quot;: &quot;1.6&quot;\n  },\n  &quot;host&quot;: &quot;microsoft.com&quot;,\n  &quot;basePath&quot;: &quot;/docfx&quot;,\n  &quot;schemes&quot;: [\n    &quot;https&quot;\n  ],\n  &quot;tags&quot;: [\n    {\n      &quot;name&quot;: &quot;Basic&quot;,\n      &quot;x-bookmark-id&quot;: &quot;BasicBookmark&quot;,\n      &quot;description&quot;: &quot;Basic description&quot;\n    },\n    {\n      &quot;name&quot;: &quot;Advanced&quot;,\n      &quot;description&quot;: &quot;Advanced description&quot;\n    }\n  ],\n  &quot;paths&quot;: {\n    &quot;/contacts&quot;: {\n      &quot;get&quot;: {\n        &quot;operationId&quot;: &quot;get_contacts&quot;,\n        &quot;tags&quot;: [\n          &quot;Basic&quot;,\n          &quot;Advanced&quot;\n        ]\n      },      \n      &quot;set&quot;: {\n        &quot;operationId&quot;: &quot;set_contacts&quot;,\n        &quot;tags&quot;: [\n          &quot;Advanced&quot;\n        ]\n      },      \n      &quot;delete&quot;: {\n        &quot;operationId&quot;: &quot;delete_contacts&quot;\n      }\n    }\n  }\n}\n</code></pre><p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"188\" sourceendlinenumber=\"188\">For the example above, the simple html layout will be:</p>\n<pre sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"189\" sourceendlinenumber=\"197\"><code class=\"lang-html\">&lt;h2 id=&quot;BasicBookmark&quot;&gt;Basic&lt;/h2&gt;\n  &lt;h3 data-uid=&quot;microsoft.com/docfx/Contacts/1.6/get_contacts&quot;&gt;get_contacts&lt;/h3&gt;\n&lt;h2 id=&quot;Advanced&quot;&gt;Advanced&lt;/h2&gt;\n  &lt;h3 data-uid=&quot;microsoft.com/docfx/Contacts/1.6/get_contacts&quot;&gt;get_contacts&lt;/h3&gt;\n  &lt;h3 data-uid=&quot;microsoft.com/docfx/Contacts/1.6/set_contacts&quot;&gt;set_contacts&lt;/h3&gt;\n&lt;h2 id=&quot;other-apis&quot;&gt;Other APIs&lt;/h2&gt;\n  &lt;h3 data-uid=&quot;microsoft.com/docfx/Contacts/1.6/delete_contacts&quot;&gt;delete_contacts&lt;/h3&gt;\n</code></pre><h4 id=\"overwrite-the-tags\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"200\" sourceendlinenumber=\"200\">Overwrite the tags</h4>\n<ol sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"201\" sourceendlinenumber=\"220\">\n<li sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"201\" sourceendlinenumber=\"209\"><p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"201\" sourceendlinenumber=\"201\">More information could be added to the tag as following:</p>\n<pre sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"202\" sourceendlinenumber=\"209\"><code class=\"lang-md\">---\nuid: microsoft.com/docfx/Contacts/1.6/tag/Basic\n---\n\nAdditional comments for `microsoft.com/docfx/Contacts/1.6/tag/Basic`\n</code></pre></li>\n<li sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"211\" sourceendlinenumber=\"220\"><p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"211\" sourceendlinenumber=\"211\">The <code>description</code> of the tag could be overwritten as following:</p>\n<pre sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"212\" sourceendlinenumber=\"220\"><code class=\"lang-md\">---\nuid: microsoft.com/docfx/Contacts/1.6/tag/Basic\ndescription: *content\n---\n\nOverwrite description for `microsoft.com/docfx/Contacts/1.6/tag/Basic`\n</code></pre></li>\n</ol>\n<h3 id=\"add-other-metadata\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"222\" sourceendlinenumber=\"222\">Add other metadata</h3>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"223\" sourceendlinenumber=\"223\">You can define your own metadata with YAML header. This functionality is quite useful when your own template is used.</p>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"225\" sourceendlinenumber=\"225\">When the key of the metadata is already preserved by DocFX, for example, <code>summary</code>, the value of <code>summary</code> will be overwritten. You can also overwrite complex types, for example, <code>description</code> of a <code>parameter</code>. Make sure the data structure of the provided metadata is consistent with the one defined in DocFX, otherwise, DocFX is unable to cast the value and fails.</p>\n<p sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"227\" sourceendlinenumber=\"227\">When the key of the metadata is not preserved by DocFX, for example, <code>not_predefined</code>. The metadata is kept and can be used in the template.</p>\n","type":"Conceptual","source":{"remote":{"path":"Documentation/tutorial/intro_rest_api_documentation.md","branch":"doc","repo":"https://github.com/dotnet/docfx.git"},"startLine":0.0,"endLine":0.0,"isExternal":false},"path":"../tutorial/intro_rest_api_documentation.md","documentation":{"remote":{"path":"Documentation/tutorial/intro_rest_api_documentation.md","branch":"doc","repo":"https://github.com/dotnet/docfx.git"},"startLine":0.0,"endLine":0.0,"isExternal":false},"_docfxVersion":"2.15.0.424","_systemKeys":["conceptual","type","source","path","documentation","title","rawTitle","wordCount"],"title":"Introduction to REST API Documentation","rawTitle":"<h1 id=\"introduction-to-rest-api-documentation\" sourcefile=\"../tutorial/intro_rest_api_documentation.md\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">Introduction to REST API Documentation</h1>","wordCount":1053.0,"__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","_shared":{}},"_disableToc":false,"docurl":"https://github.com/dotnet/docfx/blob/doc/Documentation/tutorial/intro_rest_api_documentation.md/#L1"}